// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeSafe.Nano.DAL;

namespace WeSafe.Nano.DAL.Migrations
{
    [DbContext(typeof(WeSafeNanoDbContext))]
    partial class WeSafeNanoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CameraName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CameraTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LastActivityTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("NetworkStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Port")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecognitionSettings")
                        .HasColumnType("TEXT");

                    b.Property<string>("Roi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Schedule")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecificRtcpConnectionString")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraTypeId");

                    b.HasIndex("DeviceId");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alert")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parameters")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.ToTable("CameraLogs");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraLogId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeKey")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UrlExpiration")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraLogId");

                    b.ToTable("CameraLogEntries");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CameraManufactors");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraMark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraManufactorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CameraManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraManufacturerId");

                    b.ToTable("CameraMarks");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraVendorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RtspTemplate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraVendorId");

                    b.ToTable("CameraTypes");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CameraVendors");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SendToDevChat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.ClientSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Permissions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientSubscribers");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.ClientSubscriberAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CameraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientSubscriberId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("ClientSubscriberId");

                    b.HasIndex("DeviceId");

                    b.ToTable("ClientSubscriberAssignments");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.ClientSubscriberSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientSubscriberId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("Mute")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("ClientSubscriberId");

                    b.ToTable("ClientSubscriberSettings");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("ActivationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("AssemblingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthToken")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientNetworkIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentSshPassword")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HWVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArmed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDatePassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("MACAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaxActiveCameras")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NVIDIASn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NetworkStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("PreviousSshPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("SWVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.DeviceIndicators", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CamerasFps")
                        .HasColumnType("TEXT");

                    b.Property<double?>("CpuUtilization")
                        .HasColumnType("REAL");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("GpuUtilization")
                        .HasColumnType("REAL");

                    b.Property<double?>("MemoryUtilization")
                        .HasColumnType("REAL");

                    b.Property<double?>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Traffic")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceIndicators");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.DeviceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CameraId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<int>("LogLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceLogs");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MailAddress")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NotifyServerException")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Frame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlateEventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlateEventId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.GlobalSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeepingCameraLogsDays")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeepingDeviceLogsDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GlobalSettings");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.LicensePlateRestriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LicensePlateType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("LicensePlateRestrictions");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.MobileDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirebaseToken")
                        .HasColumnType("TEXT");

                    b.Property<int>("MobileUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MobileUserId");

                    b.ToTable("MobileDevices");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.MobileUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Mute")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MobileUsers");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.PermittedAdminIp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PermittedAdminIps");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.PlateEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("DeviceId");

                    b.ToTable("PlateEvents");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.PlateEventState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlateEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlateEventId");

                    b.ToTable("PlateEventStates");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.RecognitionObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RecognitionObjects");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.RtspPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraMarkId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraMarkId");

                    b.ToTable("RtspPaths");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.TelegramUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Mute")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Settings")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<long>("TelegramId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TelegramUsers");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.TrafficEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CameraId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceMAC")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UtcDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.ToTable("TrafficEvents");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.UnhandledException", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("StackTrace")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UnhandledExceptions");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Demo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeSafe.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Camera", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.CameraType", "CameraType")
                        .WithMany()
                        .HasForeignKey("CameraTypeId");

                    b.HasOne("WeSafe.DAL.Entities.Device", "Device")
                        .WithMany("Cameras")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraLog", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Camera", "Camera")
                        .WithMany("CameraLogs")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraLogEntry", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.CameraLog", "CameraLog")
                        .WithMany("Entries")
                        .HasForeignKey("CameraLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraMark", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.CameraManufacturer", "CameraManufacturer")
                        .WithMany("CameraMarks")
                        .HasForeignKey("CameraManufacturerId");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.CameraType", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.CameraVendor", "CameraVendor")
                        .WithMany("CameraTypes")
                        .HasForeignKey("CameraVendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.ClientSubscriber", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Client", "Client")
                        .WithMany("Subscribers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.ClientSubscriberAssignment", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Camera", "Camera")
                        .WithMany("Assignments")
                        .HasForeignKey("CameraId");

                    b.HasOne("WeSafe.DAL.Entities.ClientSubscriber", "Subscriber")
                        .WithMany("Assignments")
                        .HasForeignKey("ClientSubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeSafe.DAL.Entities.Device", "Device")
                        .WithMany("Assignments")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.ClientSubscriberSettings", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Camera", "Camera")
                        .WithMany("SubscriberSettings")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeSafe.DAL.Entities.ClientSubscriber", "ClientSubscriber")
                        .WithMany("Settings")
                        .HasForeignKey("ClientSubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Device", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("WeSafe.DAL.Entities.User", "User")
                        .WithMany("Devices")
                        .HasForeignKey("CreatedBy");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.DeviceIndicators", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Device", "Device")
                        .WithMany("Indicators")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.DeviceLog", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Camera", "Camera")
                        .WithMany("DeviceLogs")
                        .HasForeignKey("CameraId");

                    b.HasOne("WeSafe.DAL.Entities.Device", "Device")
                        .WithMany("DeviceLogs")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.Frame", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.PlateEvent", "PlateEvent")
                        .WithMany("Frames")
                        .HasForeignKey("PlateEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.LicensePlateRestriction", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.MobileDevice", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.MobileUser", "MobileUser")
                        .WithMany("Devices")
                        .HasForeignKey("MobileUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.PlateEvent", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Camera", "Camera")
                        .WithMany()
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeSafe.DAL.Entities.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.PlateEventState", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.PlateEvent", "PlateEvent")
                        .WithMany("PlateEventState")
                        .HasForeignKey("PlateEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.RtspPath", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.CameraMark", "CameraMark")
                        .WithMany("RtspPaths")
                        .HasForeignKey("CameraMarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.TrafficEvent", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Camera", "Camera")
                        .WithMany("Traffic")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.UnhandledException", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.User", "User")
                        .WithMany("Exceptions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WeSafe.DAL.Entities.User", b =>
                {
                    b.HasOne("WeSafe.DAL.Entities.Client", "Client")
                        .WithMany("Users")
                        .HasForeignKey("ClientId");
                });
#pragma warning restore 612, 618
        }
    }
}
